name: Llama.cpp Binding Automation Suite

on:
  workflow_dispatch:     # Manual trigger

jobs:
  main:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch llama.cpp
        uses: actions/checkout@v4
        with:
          repository: ggerganov/llama.cpp
          path: llama.cpp
          fetch-depth: 0
          fetch-tags: true

      - name: Identify versions
        id: versions
        run: |
          cd llama.cpp
          git fetch --tags
          LLAMA_TAG=$(git describe --tags --abbrev=0 --match 'b*')
          echo "llama_tag=$LLAMA_TAG" >> $GITHUB_OUTPUT
          cd ..
          
          if [ -f last_commit.txt ]; then
            echo "last_commit=$(cat last_commit.txt)" >> $GITHUB_OUTPUT
          else
            echo "last_commit=initial" >> $GITHUB_OUTPUT
          fi

      - name: Skip if no new commits
        if: ${{ steps.versions.outputs.llama_tag == steps.versions.outputs.last_commit }}
        run: exit 0

      - name: Checkout identified tag
        run: |
          cd llama.cpp
          git checkout ${{ steps.versions.outputs.llama_tag }}
      - name: add last_commit
        run: |
          echo "${{ steps.versions.outputs.llama_tag }}" > last_commit.txt
          git add last_commit.txt

      - name: Setup dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libclang-dev build-essential libcurl4-openssl-dev
          cd packages/llama_cpp_bindings
          dart pub get

      - name: Generate FFI bindings
        run: |
          cd packages/llama_cpp_bindings
          dart run ffigen

      - name: Detect binding changes
        id: changes
        run: |
          if git diff HEAD --exit-code packages/llama_cpp_bindings/lib/src/generated_llama_cpp_bindings.dart; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git add packages/llama_cpp_bindings/lib/src/generated_llama_cpp_bindings.dart
          fi

      - name: Build llama.cpp
        if: ${{ steps.changes.outputs.has_changes == 'true' }}
        run: |
          cd llama.cpp
          mkdir build
          cd build
          cmake .. \
            -DLLAMA_FATAL_WARNINGS=ON \
            -DLLAMA_CURL=ON \
            -DGGML_RPC=ON
          cmake --build . --config Release -j $(nproc)

      - name: Debug workspace
        if: ${{ steps.changes.outputs.has_changes == 'true' }}
        run: |
          echo "Workspace path: ${{ github.workspace }}"
          ls -la ${{ github.workspace }}
          cd llama.cpp/build/
          find . -name "*.so" -exec realpath {} \;

      - name: Test shared library loading
        if: ${{ steps.changes.outputs.has_changes == 'true' }}
        run: |
          dart packages/llama_cpp_bindings/test/llama_cpp_bindings_test.dart
        env:
          LD_LIBRARY_PATH: ${{ github.workspace }}/llama.cpp/build/bin/
          LLAMA_LIB_PATH: ${{ github.workspace }}/llama.cpp/build/bin/libllama.so

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -m "chore(bindings): Auto-update to llama.cpp@${ { steps.versions.outputs.llama_tag:0:7 } }"
          git push